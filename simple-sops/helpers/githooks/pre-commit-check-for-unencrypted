#!/usr/bin/env bash

#set -x

# Get the list of modified files
files="$(git diff --cached --name-only)"

if [[ -z "${files}" ]]; then
  exit 0
fi

declare -i count

# diff the file list against the files in `.simple-sops-managed-files`
# TODO, example of compare between two but only includes column3 (present in both)
#comm -1 -2 <(printf '%s\n' "${array1[@]}" | sort -u) <(printf '%s\n' "${array2[@]}" | sort -u)

declare -a sops_managed_changed_files
mapfile -t sops_managed_changed_files < <(comm -12 <(sort -u .simple-sops-managed-files) <(printf '%s\n' "${files[@]}" | sort -u))
simple-sops/helpers/is-sops-encrypted.sh "${sops_managed_changed_files[@]}"

count=$?

# If the files being changed, are in the list of `.simple-sops-managed-files`, then verify they are encrypted
# TODO: call `simple-sops/helpers/is-sops-encrypted.sh $files`
# `simple-sops/helpers/is-sops-encrypted.sh $files` will return a number (false/fail) if any file is not encrypted
# That number is the count of files which are not encrypted.
# If it is false (meaning some files are still unencrypted) print a message to that effect.

# If no errors, allow the commit

if [[ $count -gt 0 ]]; then
  echo "At least $count of the following files are not encrypted and should be"
  echo -e "${sops_managed_changed_files[@]}"
  echo Please run: simple-sops/marshal.sh encrypt
  echo And re-add the file before commiting.
fi
exit $count

